@model IEnumerable<AssignmentWebshop.Models.Product>

@{
	ViewBag.Title = "Products";
}

<h2>Products</h2>

<p>
	<input type="file" id="input" value="Import products from .csv" onchange="parseProductsFile(this.files[0])">
</p>
<table class="table">
	<tr>
		<th>
			@Html.DisplayNameFor(model => model.ProductName)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.ArticleCode)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.ProductType)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.Manufacturer)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.Price)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.DiscountPrice)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.DeliveryRange)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.PersonType)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.Size)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.Color)
		</th>
		<th></th>
	</tr>

	@foreach (var item in Model)
	{
		<tr>
			<td>
				@Html.DisplayFor(modelItem => item.ProductName)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.ArticleCode)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.ProductType.Name)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Manufacturer.Name)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Price)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.DiscountPrice)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.DeliveryRange.Name)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.PersonType.Name)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Size.Name)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Color.Name)
			</td>
		</tr>
	}

</table>

<p>
	@{
		const int pageSize = 10;
		int startIndex = 0;
		String startIndexStr = Request.Params["startIndex"];
		if (startIndexStr != null)
		{
			int.TryParse(Request.Params["startIndex"], out startIndex);
		}

		if (startIndex > 0) {
			@Html.ActionLink("Previous page", "", new
			{
				startIndex = startIndex - pageSize
			}, new { @class = "prev-link" })
		}

		if (Model.Count() >= pageSize)
		{
			@Html.ActionLink("Next page", "", new
			{
				startIndex = startIndex + pageSize
			}, new { @class = "next-link" })
		}
	}
</p>


@section Scripts {
	@Scripts.Render("~/Scripts/parseProductsFile.js")
	@Scripts.Render("~/Scripts/createProduct.js")
	@Scripts.Render("https://cdnjs.cloudflare.com/ajax/libs/PapaParse/4.3.6/papaparse.min.js")
}